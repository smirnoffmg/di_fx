name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  actions: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: latest
    
    - name: Cache dependencies
      uses: actions/cache@v4
      env:
        UV_CACHE_DIR: ~/.cache/uv
      with:
        path: |
          ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Check code formatting
      run: |
        uv run ruff format --check src/ tests/ examples/
    
    - name: Check import sorting
      run: |
        uv run ruff check --select I src/ tests/ examples/
    
    - name: Run linting
      run: |
        uv run ruff check src/ tests/ examples/
    
    - name: Run type checking
      run: |
        uv run mypy src/
    
    - name: Run tests
      run: |
        uv run pytest tests/ -v --cov=src/di_fx --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Optimize cache
      run: |
        uv cache prune --ci
